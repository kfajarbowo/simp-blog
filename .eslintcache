[{"E:\\Learning\\React\\simp-blog\\src\\index.js":"1","E:\\Learning\\React\\simp-blog\\src\\App.js":"2","E:\\Learning\\React\\simp-blog\\src\\reportWebVitals.js":"3","E:\\Learning\\React\\simp-blog\\src\\Home.js":"4","E:\\Learning\\React\\simp-blog\\src\\Navbar.js":"5","E:\\Learning\\React\\simp-blog\\src\\BlogList.js":"6","E:\\Learning\\React\\simp-blog\\src\\useFetch.js":"7","E:\\Learning\\React\\simp-blog\\src\\Create.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":607,"mtime":1612260410180,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":923,"mtime":1612267488573,"results":"13","hashOfConfig":"10"},{"size":314,"mtime":1612261108116,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1611764520916,"results":"15","hashOfConfig":"10"},{"size":1292,"mtime":1612268440106,"results":"16","hashOfConfig":"10"},{"size":156,"mtime":1612260487541,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19sf26",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Learning\\React\\simp-blog\\src\\index.js",[],"E:\\Learning\\React\\simp-blog\\src\\App.js",[],"E:\\Learning\\React\\simp-blog\\src\\reportWebVitals.js",[],"E:\\Learning\\React\\simp-blog\\src\\Home.js",[],"E:\\Learning\\React\\simp-blog\\src\\Navbar.js",[],"E:\\Learning\\React\\simp-blog\\src\\BlogList.js",[],"E:\\Learning\\React\\simp-blog\\src\\useFetch.js",["34"],"E:\\Learning\\React\\simp-blog\\src\\Create.js",[],{"ruleId":"35","severity":1,"message":"36","line":7,"column":15,"nodeType":"37","endLine":38,"endColumn":7},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]