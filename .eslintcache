[{"E:\\Learning\\React\\simp-blog\\src\\index.js":"1","E:\\Learning\\React\\simp-blog\\src\\App.js":"2","E:\\Learning\\React\\simp-blog\\src\\reportWebVitals.js":"3","E:\\Learning\\React\\simp-blog\\src\\Home.js":"4","E:\\Learning\\React\\simp-blog\\src\\Navbar.js":"5","E:\\Learning\\React\\simp-blog\\src\\BlogList.js":"6","E:\\Learning\\React\\simp-blog\\src\\useFetch.js":"7","E:\\Learning\\React\\simp-blog\\src\\Create.js":"8","E:\\Learning\\React\\simp-blog\\src\\BlogDetails.js":"9","E:\\Learning\\React\\simp-blog\\src\\NotFound.js":"10"},{"size":527,"mtime":1612872243230,"results":"11","hashOfConfig":"12"},{"size":816,"mtime":1612869506449,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":923,"mtime":1612267488573,"results":"15","hashOfConfig":"12"},{"size":314,"mtime":1612261108116,"results":"16","hashOfConfig":"12"},{"size":690,"mtime":1612425829217,"results":"17","hashOfConfig":"12"},{"size":1296,"mtime":1612784860151,"results":"18","hashOfConfig":"12"},{"size":1746,"mtime":1612868590056,"results":"19","hashOfConfig":"12"},{"size":1045,"mtime":1612869031198,"results":"20","hashOfConfig":"12"},{"size":368,"mtime":1612872793517,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19sf26",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Learning\\React\\simp-blog\\src\\index.js",["43"],"E:\\Learning\\React\\simp-blog\\src\\App.js",[],"E:\\Learning\\React\\simp-blog\\src\\reportWebVitals.js",[],["44","45"],"E:\\Learning\\React\\simp-blog\\src\\Home.js",[],"E:\\Learning\\React\\simp-blog\\src\\Navbar.js",[],"E:\\Learning\\React\\simp-blog\\src\\BlogList.js",[],"E:\\Learning\\React\\simp-blog\\src\\useFetch.js",["46"],"E:\\Learning\\React\\simp-blog\\src\\Create.js",[],"E:\\Learning\\React\\simp-blog\\src\\BlogDetails.js",[],"E:\\Learning\\React\\simp-blog\\src\\NotFound.js",["47"],{"ruleId":"48","severity":1,"message":"49","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":11},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":8,"column":15,"nodeType":"58","endLine":39,"endColumn":7},{"ruleId":"59","severity":1,"message":"60","line":10,"column":13,"nodeType":"61","endLine":10,"endColumn":41},"no-unused-vars","'Img' is defined but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]